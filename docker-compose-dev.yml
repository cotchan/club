version: "3"

services:
  frontend:
    container_name: react-app
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - /app/node_modules
      - ./frontend:/app
    stdin_open: true
  backend:
    container_name: spring-app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    env_file: ./.env
#    environment:
#      SPRING_DATASOURCE_URL: "${DB_URL}"
#      SPRING_DATASOURCE_USERNAME: "${DB_USERNAME}"
#      SPRING_DATASOURCE_PASSWORD: "${DB_PASSWORD}"
#      SPRING_PROFILES_ACTIVE: dev
#      CLOUD_AWS_S3_REGION: "${CLOUD_AWS_S3_REGION}"
#      CLOUD_AWS_S3_URL: "${CLOUD_AWS_S3_URL}"
#      CLOUD_AWS_S3_BUCKET: "${CLOUD_AWS_S3_BUCKET}"
#      CLOUD_AWS_S3_ACCESS_KEY: "${CLOUD_AWS_S3_ACCESS_KEY}"
#      CLOUD_AWS_S3_SECRET_KEY: "${CLOUD_AWS_S3_SECRET_KEY}"
  nginx:
    container_name: nginx-app
    restart: always
    volumes:
      - ./certbot/data/certbot/conf:/etc/letsencrypt
      - ./certbot/data/certbot/www:/var/www/certbot
    build:
      dockerfile: Dockerfile
      context: ./nginx
    ports:
      - "80:80"
      - "443:443"
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./certbot/data/certbot/conf:/etc/letsencrypt
      - ./certbot/data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"